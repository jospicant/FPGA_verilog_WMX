// Code generated by Icestudio 0.7.1w202109100309

`default_nettype none

//---- Top entity
module main (
 input vclk,
 output [0:7] vinit
);
 wire w0;
 assign w0 = vclk;
 vcfd9ba v599bcd (
  .v444878(w0)
 );
 assign vinit = 8'b00000000;
endmodule

/*-------------------------------------------------*/
/*--   */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- 
/*-------------------------------------------------*/
//---- Top entity
module vcfd9ba #(
 parameter v1952a0 = 16
) (
 input v444878,
 input v6a82dd,
 output vd4e5d7
);
 localparam p3 = v1952a0;
 wire w0;
 wire w1;
 wire w2;
 assign vd4e5d7 = w0;
 assign w1 = v444878;
 assign w2 = v6a82dd;
 vcfd9ba_va7041c #(
  .t(p3)
 ) va7041c (
  .out(w0),
  .clk(w1),
  .in(w2)
 );
endmodule

/*-------------------------------------------------*/
/*-- Debouncer  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Remove the rebound on a mechanical switch
/*-------------------------------------------------*/

module vcfd9ba_va7041c #(
 parameter t = 0
) (
 input clk,
 input in,
 output out
);
 //-- Debouncer Circuit
 //-- It produces a stable output when the
 //-- input signal is 
 
 parameter N = t;  
 
 reg btn_prev = 0;
 reg btn_out_r = 0;
 
 reg [N:0] counter = 0;
 
 
 always @(posedge clk) begin
 
   //-- If btn_prev and btn_in are differents
   if (btn_prev ^ in == 1'b1) begin
     
       //-- Reset the counter
       counter <= 0;
       
       //-- Capture the button status
       btn_prev <= in;
   end
     
   //-- If no timeout, increase the counter
   else if (counter[N] == 1'b0)
       counter <= counter + 1;
       
   else
     //-- Set the output to the stable value
     btn_out_r <= btn_prev;
 
 end
 
 assign out = btn_out_r;
 
endmodule
